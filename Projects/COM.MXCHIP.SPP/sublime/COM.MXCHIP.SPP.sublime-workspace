{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"DHCP",
				"DHCP_Disable	DHCPOperationMode"
			],
			[
				"DHC",
				"DHCP_Client	DHCPOperationMode"
			],
			[
				"s",
				"seed	int32_t"
			],
			[
				"b",
				"BundleSeedID	char [32]"
			],
			[
				"ma",
				"manufacturer	char [32]"
			],
			[
				"n",
				"name	char [32]"
			],
			[
				"c",
				"contentLength	uint64_t"
			],
			[
				"uint",
				"uint8_t	typedef"
			],
			[
				"uin",
				"uint8_t	typedef"
			],
			[
				"Platform",
				"PlatformWDGReload()	void"
			],
			[
				"wla",
				"wlanBufferLen	macro"
			],
			[
				"RE",
				"REMOTE_CONNECT	enum <anonymous>"
			],
			[
				"_us",
				"_uart_send_mutex	mico_mutex_t"
			],
			[
				"requi",
				"require(X, LABEL)	macro"
			],
			[
				"_uart",
				"_uart_send_mutex	mico_mutex_t"
			],
			[
				"mico_rtos_init_s",
				"mico_rtos_init_semaphore(mico_semaphore_t *semaphore, int count)	MxchipStatus"
			],
			[
				"MICO",
				"MICO_NO_WAIT	macro"
			],
			[
				"mico_rtosge",
				"mico_rtos_get_semaphore(mico_semaphore_t *semaphore, unsigned int timeout_ms)	MxchipStatus"
			],
			[
				"mico_rtos_in",
				"mico_rtos_create_thread(mico_thread_t *thread, uint8_t priority, const char *name, mico_thread_function_t function, unsigned int stack_size, void *arg)	MxchipStatus"
			],
			[
				"MICO_",
				"MICO_NEVER_TIMEOUT	macro"
			],
			[
				"eState_",
				"eState_Wlan_Powerdown	SYS_State_t"
			],
			[
				"plat",
				"PlatformUartIn"
			],
			[
				"memc",
				"memcmp(const void *, const void *, size_t)	int"
			],
			[
				"m",
				"mcuPowerSaveEnable	bool"
			],
			[
				"mico",
				"mico_get_time()	uint32_t"
			],
			[
				"re",
				"require_noerr(ERR, LABEL)	macro"
			],
			[
				"mico_rtos",
				"mico_rtos_init_mutex(mico_mutex_t *mutex)	MxchipStatus"
			],
			[
				"mico_t",
				"mico_mutex_t	typedef"
			],
			[
				"mico_rt",
				"mico_rtos_set_semaphore(mico_semaphore_t *semaphore)	MxchipStatus"
			],
			[
				"DE",
				"DEAFULT_REMOTE_SERVER	macro"
			],
			[
				"fl",
				"flashContentInRam	flash_content_t"
			],
			[
				"kNo",
				"kNoErr	macro"
			],
			[
				"lo",
				"localTcpClient_fd	int *"
			],
			[
				"PlatformFlash",
				"PlatformFlashWrite(volatile uint32_t *FlashAddress, uint32_t *Data, uint32_t DataLength)	OSStatus"
			],
			[
				"Platformf",
				"PlatformFlashInitialize()	OSStatus"
			],
			[
				"kc",
				"kChecksumErr	macro"
			],
			[
				"kun",
				"kUnknownErr	macro"
			],
			[
				"kC",
				"kChecksumErr	macro"
			],
			[
				"f",
				"flashContentInRam	flash_content_t"
			],
			[
				"fla",
				"flashContentInRam	flash_content_t"
			],
			[
				"mico_l",
				"mico_log(M, ...)	macro"
			],
			[
				"Button_STANDBY_",
				"Button_STANDBY_PIN	macro"
			],
			[
				"GPIO_Read",
				"GPIO_ReadInputDataBit(GPIO_TypeDef *GPIOx, uint16_t GPIO_Pin)	uint8_t"
			],
			[
				"easylink",
				"easylinkClient_fd	int"
			],
			[
				"mico_rtos_set",
				"mico_rtos_set_semaphore(mico_semaphore_t *semaphore)	MxchipStatus"
			],
			[
				"es",
				"eState_Software_Reset	SYS_State_t"
			],
			[
				"mico_rtos_init_",
				"mico_rtos_init_semaphore(mico_semaphore_t *semaphore, int count)	MxchipStatus"
			],
			[
				"mico_s",
				"mico_semaphore_t	typedef"
			],
			[
				"e",
				"easyLinkSkip	bool"
			],
			[
				"require_noerr",
				"require_noerr_action(ERR, LABEL, ACTION)	macro"
			],
			[
				"DH",
				"DHCP_Client	DHCPOperationMode"
			],
			[
				"kn",
				"kNoErr	macro"
			],
			[
				"requ",
				"require(X, LABEL)	macro"
			],
			[
				"l",
				"localIp	char [16]"
			],
			[
				"ip",
				"local_ip_addr	char [16]"
			],
			[
				"int",
				"int32_t	typedef"
			],
			[
				"d",
				"dhcpEnable	bool"
			],
			[
				"inet",
				"inet_ntoa(char *s, unsigned int x)	char *"
			],
			[
				"a",
				"allConfigured	config_type"
			],
			[
				"Clos",
				"CloseEasylink2()	int"
			],
			[
				"mico_notify_WIFI_S",
				"mico_notify_WIFI_STATUS_CHANGED	mico_notify_types_t"
			],
			[
				"k",
				"keyLength	int"
			],
			[
				"us",
				"user_key	char [64]"
			],
			[
				"u",
				"user_key	char [64]"
			],
			[
				"key",
				"key_len	int"
			],
			[
				"ke",
				"key_len	int"
			],
			[
				"MX",
				"MXCHIP_SUCCESS	MxchipStatus"
			],
			[
				"require_",
				"require_action(X, LABEL, ACTION)	macro"
			],
			[
				"strn",
				"strncpy(char *restrict, const char *restrict, size_t)	char *"
			],
			[
				"kUn",
				"kUnknownErr	macro"
			],
			[
				"__str",
				"__strdup_trans_dot(char *src)	char *"
			],
			[
				"p",
				"protocol	char [32]"
			],
			[
				"temp",
				"temp2	WiFi_Status_Notify *"
			],
			[
				"kOper",
				"kNotPreparedErr	macro"
			],
			[
				"mico_rtos_i",
				"mico_rtos_init_mutex(mico_mutex_t *mutex)	MxchipStatus"
			],
			[
				"kU",
				"kUnknownErr	macro"
			],
			[
				"req",
				"require_noerr(ERR, LABEL)	macro"
			],
			[
				"in",
				"inContext"
			],
			[
				"send",
				"send(int sockfd, const void *buf, unsigned int len, int flags)	int"
			],
			[
				"mico_rtos_ge",
				"mico_rtos_get_semaphore(mico_semaphore_t *semaphore, unsigned int timeout_ms)	MxchipStatus"
			],
			[
				"t",
				"txt_att	char *"
			],
			[
				"MF",
				"MFi_SERVICE_MFi	macro"
			],
			[
				"mico_rtos_de",
				"mico_rtos_delete_thread(mico_thread_t *thread)	MxchipStatus"
			],
			[
				"mico_re",
				"mico_rtos_init_mutex(mico_mutex_t *mutex)	MxchipStatus"
			],
			[
				"E",
				"ENABLE	FunctionalState"
			],
			[
				"ea",
				"eaBundleSeedID	char *"
			],
			[
				"support",
				"supports5GHzWiFi	bool"
			],
			[
				"supportsAirp",
				"supportsAirPrint	bool"
			],
			[
				"w",
				"supportsWakeOnWireless	bool"
			],
			[
				"wi",
				"wifi_key	char [32]"
			],
			[
				"WAC_N",
				"WAC_NetConfig	network_InitTypeDef_st *"
			],
			[
				"de",
				"destinationSSID	char*"
			],
			[
				"page",
				"pagesNumber	uint8_t"
			],
			[
				"CP_",
				"CP_I2C_RETRY_TIMES	macro"
			],
			[
				"WAC",
				"WAC_OUI_default	const uint8_t[]"
			],
			[
				"OUI",
				"OUI	uint8_t *"
			],
			[
				"El",
				"ElementsLength	uint16_t"
			],
			[
				"su",
				"Support_AirPrint	uint8_t"
			],
			[
				"ui",
				"uint8_t	typedef"
			],
			[
				"sto",
				"stopBits	const int [3]"
			],
			[
				"uart",
				"uartParam	UartParam_t"
			],
			[
				"USART_HardwareFlowControl_",
				"USART_HardwareFlowControl_RTS_CTS	macro"
			],
			[
				"USART_StopBits_",
				"USART_StopBits_1_5	macro"
			],
			[
				"H",
				"HIGH	enum _DL_GPIO_STATE_"
			],
			[
				"GPIO_Mode_",
				"GPIO_Mode_IN	GPIOMode_TypeDef"
			],
			[
				"DL_PULL_",
				"DL_PULL_DOWN	enum _DL_GPIO_PULL_"
			],
			[
				"DL_PULL",
				"DL_PULL_NONE	enum _DL_GPIO_PULL_"
			],
			[
				"GPIO_",
				"GPIO_PORT	GPIO_TypeDef *"
			],
			[
				"mx",
				"mxEnable	enum <anonymous>"
			],
			[
				"ps",
				"ps_disable()	void"
			],
			[
				"STA",
				"STA_MODE	enum _NETWORK_INTERFACE_"
			],
			[
				"clou",
				"cloud_connected	unsigned int"
			],
			[
				"soc",
				"socket_fd	int"
			],
			[
				"UAP",
				"UAP_START	enum <anonymous>"
			],
			[
				"FD",
				"FD_SET	macro"
			],
			[
				"mxch",
				"mxchipTick()	void"
			],
			[
				"STAT",
				"Station	WiFi_Interface"
			],
			[
				"uap_",
				"uap_key	char [32]"
			],
			[
				"def",
				"device_info	mxchipWNet_HA_st  *"
			],
			[
				"MS",
				"MS_TIMER	vu32"
			],
			[
				"st",
				"status	current_state_t"
			],
			[
				"running",
				"running_state	unsigned int"
			],
			[
				"wN",
				"wNetConfig	network_InitTypeDef_st"
			],
			[
				"mxchipWN",
				"mxchipWNet_HA_Init	mxchipWNet_HA_st"
			],
			[
				"mem",
				"memcpy(void *, const void *, size_t)	void *"
			],
			[
				"pa",
				"pairIndex	u8"
			],
			[
				"se",
				"selfKillCount	int32u"
			],
			[
				"int1",
				"int16u	typedef"
			]
		]
	},
	"buffers":
	[
		{
			"file": "/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/MICO/mico_main.c",
			"settings":
			{
				"buffer_size": 11211,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/Users/william/Develop/mxchipWNet Pro Demo@EMW316x/Library/mico_wlan.h",
			"settings":
			{
				"buffer_size": 9281,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/MICO/mico_define.h",
			"settings":
			{
				"buffer_size": 8088,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/MICO/mico_configuration_server.c",
			"settings":
			{
				"buffer_size": 7202,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Library/EasyLink.c",
			"settings":
			{
				"buffer_size": 25238,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Library/EasyLink.h",
			"settings":
			{
				"buffer_size": 2189,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/MICO/mico_flash_configuration.c",
			"settings":
			{
				"buffer_size": 4775,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Demos/COM.MXCHIP.SPP/mico_app_define.h",
			"settings":
			{
				"buffer_size": 2867,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Library/support/mdns.c",
			"settings":
			{
				"buffer_size": 21286,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/MICO/mico_wac.c",
			"settings":
			{
				"buffer_size": 21342,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "#ifndef __MICO_CALLBACK_H__\n#define __MICO_CALLBACK_H__\n\n#include \"MICODefine.h\"\n\n// void ApListCallback(UwtPara_str *pApList);\n\ntypedef enum {\n  MXCHIP_WIFI_UP = 1,\n  MXCHIP_WIFI_DOWN,\n\n  MXCHIP_UAP_UP,\n  MXCHIP_UAP_DOWN,\n} WiFiEvent;\n\ntypedef enum{\n  /* MICO system defined notifications */\n  mico_notify_WIFI_SCAN_COMPLETED,          //void (*function)(ScanResult *pApList, mico_Context_t * const inContext);\n  mico_notify_WIFI_STATUS_CHANGED,          //void (*function)(WiFiEvent status, mico_Context_t * const inContext);\n  mico_notify_WiFI_PARA_CHANGED,            //void (*function)(apinfo_adv_t *ap_info, char *key, int key_len, mico_Context_t * const inContext);\n  mico_notify_DHCP_COMPLETED,               //void (*function)(net_para_st *pnet, mico_Context_t * const inContext);\n  mico_notify_EASYLINK_COMPLETED,           //void (*function)(network_InitTypeDef_st *nwkpara, mico_Context_t * const inContext);\n  mico_notify_EASYLINK_GET_EXTRA_DATA,      //void (*function)(int datalen, char*data, mico_Context_t * const inContext);\n  mico_notify_TCP_CLIENT_CONNECTED,         //void (*function)(char *str, int len, mico_Context_t * const inContext);\n  mico_notify_DNS_RESOLVE_COMPLETED,        //void (*function)(char *str, int len, mico_Context_t * const inContext);\n  mico_notify_READ_APP_INFO,                //void (*function)(int fd, mico_Context_t * const inContext);\n  mico_notify_SYS_WILL_POWER_OFF,            //void (*function)(mico_Context_t * const inContext);\n  \n  /* User defined notifications */\n\n} mico_notify_types_t;\n\nOSStatus mico_init_notification_center  ( void * const inContext );\n\nOSStatus mico_add_notification          ( mico_notify_types_t notify_type, void *functionAddress );\n\nOSStatus mico_remove_notification       ( mico_notify_types_t notify_type, void *functionAddress );\n\n\n#endif\n\n\n",
			"file": "/Users/william/Develop/mxchipWNet Pro Demo@EMW316x/Library/mico_callback.h",
			"file_size": 1870,
			"file_write_time": 1402187846000000,
			"settings":
			{
				"buffer_size": 1828,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "/**\n******************************************************************************\n* @file    mdns.h \n* @author  William Xu\n* @version V1.0.0\n* @date    05-May-2014\n* @brief   This header contains function prototypes called by mdns protocol \n  operation\n******************************************************************************\n* @attention\n*\n* THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS\n* WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE\n* TIME. AS A RESULT, MXCHIP Inc. SHALL NOT BE HELD LIABLE FOR ANY\n* DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING\n* FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE\n* CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.\n*\n* <h2><center>&copy; COPYRIGHT 2014 MXCHIP Inc.</center></h2>\n******************************************************************************\n*/ \n\n\n#ifndef __MDNS_H\n#define __MDNS_H\n\n#include \"stm32f2xx.h\"\n#include \"mico_api.h\"\n/**************************************************************************************************************\n * INCLUDES\n **************************************************************************************************************/\n\n#define DNS_MESSAGE_IS_A_RESPONSE           0x8000\n#define DNS_MESSAGE_OPCODE                  0x7800\n#define DNS_MESSAGE_AUTHORITATIVE           0x0400\n#define DNS_MESSAGE_TRUNCATION              0x0200\n#define DNS_MESSAGE_RECURSION_DESIRED       0x0100\n#define DNS_MESSAGE_RECURSION_AVAILABLE     0x0080\n#define DNS_MESSAGE_RESPONSE_CODE           0x000F\n\ntypedef enum\n{\n    DNS_NO_ERROR        = 0,\n    DNS_FORMAT_ERROR    = 1,\n    DNS_SERVER_FAILURE  = 2,\n    DNS_NAME_ERROR      = 3,\n    DNS_NOT_IMPLEMENTED = 4,\n    DNS_REFUSED         = 5\n} dns_message_response_code_t;\n\ntypedef enum\n{\n    RR_TYPE_A      = 1,     // A - Host Address\n    RR_TYPE_NS     = 2,\n    RR_TYPE_MD     = 3,\n    RR_TYPE_MF     = 4,\n    RR_TYPE_CNAME  = 5,\n    RR_TYPE_SOA    = 6,\n    RR_TYPE_MB     = 7,\n    RR_TYPE_MG     = 8,\n    RR_TYPE_MR     = 9,\n    RR_TYPE_NULL   = 10,\n    RR_TYPE_WKS    = 11,\n    RR_TYPE_PTR    = 12,    // PTR - Domain Name pointer\n    RR_TYPE_HINFO  = 13,    // HINFO - Host Information\n    RR_TYPE_MINFO  = 14,\n    RR_TYPE_MX     = 15,\n    RR_TYPE_TXT    = 16,\n    RR_TYPE_SRV    = 33,    // SRV - Service Location Record\n    RR_QTYPE_AXFR  = 252,\n    RR_QTYPE_MAILB = 253,\n    RR_QTYPE_AILA  = 254,\n    RR_QTYPE_ANY   = 255\n} dns_resource_record_type_t;\n\ntypedef enum\n{\n    RR_CLASS_IN  = 1,\n    RR_CLASS_CS  = 2,\n    RR_CLASS_CH  = 3,\n    RR_CLASS_HS  = 4,\n    RR_CLASS_ALL = 255\n} dns_resource_record_class_t;\n\n#define RR_CACHE_FLUSH   0x8000\n\n/**************************************************************************************************************\n * STRUCTURES\n **************************************************************************************************************/\n\ntypedef struct\n{\n  u8* start_of_name;\n  u8* start_of_packet; // Used for compressed names;\n} dns_name_t;\n\ntypedef struct\n{\n  u16 id;\n  u16 flags;\n  u16 question_count;\n  u16 answer_count;\n  u16 name_server_count;\n  u16 additional_record_count;\n} dns_message_header_t;\n\ntypedef struct\n{\n    dns_message_header_t* header; // Also used as start of packet for compressed names\n    u8* iter;\n    u8* end;\n} dns_message_iterator_t;\n\ntypedef struct\n{\n  u16 question_type;\n  u16 question_class;\n} dns_question_t;\n\ntypedef struct\n{\n  u16 record_type;\n  u16 record_class;\n  uint32_t ttl;\n  u16 rd_length;\n  dns_message_iterator_t rdata;\n} dns_record_t;\n\n\ntypedef struct\n{\n  //char *name;\n  char *service_name;\n  char *host_name;\n  char *instance_name;\n  char *txt_record;\n  uint16_t service_port;\n  WiFi_Interface interface;\n} bonjour_init_t;\n\nvoid bonjour_service_init(bonjour_init_t init);\n\nint start_bonjour_service(void);\n\nvoid suspend_bonjour_service(FunctionalState state);\n\nvoid stop_bonjour_service(void);\n\n\n\n#endif\n",
			"file": "/Users/william/Develop/mxchipWNet Pro Demo@EMW316x/Library/Support/mdns.h",
			"file_size": 4126,
			"file_write_time": 1400468671000000,
			"settings":
			{
				"buffer_size": 3975,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/MICO/MFi-SAP.h",
			"settings":
			{
				"buffer_size": 204,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 287.0,
		"selected_items":
		[
			[
				"Package Control: ",
				"Package Control: Install Package"
			],
			[
				"",
				"Package Control: Install Package"
			],
			[
				"v",
				"View: Toggle Side Bar"
			],
			[
				"Cscope:Look up symbol",
				"Cscope: Look up symbol"
			],
			[
				":",
				"View: Toggle Tabs"
			],
			[
				":q",
				"Set Syntax: SQL"
			],
			[
				"Package Control: install		",
				"Package Control: Install Package"
			],
			[
				"Snippet: ",
				"Snippet: Lorem ipsum"
			]
		],
		"width": 449.0
	},
	"console":
	{
		"height": 125.0
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/MICO/MFi-SAP.c",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/MICO/Bonjour.c",
		"/Users/william/Develop/mxchipWNet Pro Demo@EMW316x/Library/Support/HTTPUtils.h",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/MICO/WACLogging.h",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/MICO/mico_wac.c",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Projects/COM.MXCHIP.SPP/sublime/COM.MXCHIP.SPP.sublime-project",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Platform/HAL_EMW3162.h",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Demos/COM.MXCHIP.SPP/User_EasyLink.c",
		"/Users/william/Develop/mxchipWNet Pro Demo@EMW316x/external/JSON-C/json_object.h",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Demos/COM.MXCHIP.SPP/LocalTcpServer.c",
		"/Users/william/Develop/mxchipWNet Pro Demo@EMW316x/Library/mico_socket.h",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/External/JSON-C/json_object_private.h",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/External/JSON-C/json_object.c",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/External/JSON-C/printbuf.h",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Demos/COM.MXCHIP.SPP/mico_app_main.c",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Demos/Demo2_COM.MXCHIP.SPP/mico_app_main.c",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Demos/Demo2_COM.MXCHIP.SPP/LocalTcpServer.c",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/MICO/mico_flash_configuration.c",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Demos/Demo2_COM.MXCHIP.SPP/stm32f2xx_it.h",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Library/mico_wlan.h",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Library/mico_socket.h",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Library/mico_rtos.h",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/MICO/mico_main.c",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Library/EasyLink.c",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Library/mico_callback.h",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Library/mico_api.h",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Library/mico_callback.c",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/MICO/mico_define.h",
		"/Users/William/Library/Application Support/Sublime Text 2/Packages/SublimeClang/clang/include/stdbool.h",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Library/support/Common.h",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Library/mico_config.c",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/STM32F2xx_StdPeriph_Driver/src/stm32f2xx_rng.c",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Projects/Demo2_COM.MXCHIP.SPP/sublime/COM.MXCHIP.SPP.sublime-project",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/STM32F2xx_StdPeriph_Driver/src/stm32f2xx_i2c.c",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Platform/HAL_EMW3161.h",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/STM32F2xx_StdPeriph_Driver/CMSIS/core_cm3.h",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/STM32F2xx_StdPeriph_Driver/src/stm32f2xx_adc.c",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Library/mico_system_monitor.h",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Library/mico_system_monitor.c",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Library/EasyLink.h",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Library/support/SocketUtils.c",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Demos/Demo2_COM.MXCHIP.SPP/mico_app_define.h",
		"/Users/william/Develop/mxchipWNet Pro Demo@EMW316x/STM32F2xx_StdPeriph_Driver/inc/stm32f2xx.h",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/MICO/EasyLink.c",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/MICO/mico_system_monitor.c",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Library/support/StringUtils.h",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Library/support/Debug.h",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Platform/platform.h",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Library/mxchipWNET.h",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Library/mico_algorithm.h",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Library/mico_utils.h",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Library/mxchipWNet_TypeDef.h",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Platform/PlatformFlash.h",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Library/encrypt.h",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Library/support/AESUtils.c",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Library/support/mdns.h",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Library/support/mdns.c",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Library/support/HTTPUtils.h",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Library/support/HTTPUtils.c",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Library/support/RingBufferUtils.c",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Library/support/StringUtils.c",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Library/support/TimeUtils.c",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Library/support/TLVUtils.c",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Library/support/URLUtils.c",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Library/support/AESUtils.h",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Demos/Demo2_COM.MXCHIP.SPP/SppProtocol.h",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Demos/Demo2_COM.MXCHIP.SPP/RemoteTcpClient.c",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Demos/Demo2_COM.MXCHIP.SPP/UartRecv.c",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Platform/PlatformUart.c",
		"/Users/william/Develop/mxchipWNet Pro Demo@EMW316x/STM32F2xx_StdPeriph_Driver/inc/stm32f2xx_usart.h",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Demos/Demo2_COM.MXCHIP.SPP/SppProtocol.c",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Platform/PlatformWDG.h",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Platform/PlatformWDG.c",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Demos/Demo2_COM.MXCHIP.SPP/User_EasyLink.c",
		"/Users/william/Develop/mxchipWNet Pro Demo@EMW316x/MICO/mico_define.h",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/MICO/EasyLink.h",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Platform/platform.c",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Library/support/URLUtils.h",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Library/support/TLVUtils.h",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Library/support/TimeUtils.h",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Library/support/SocketUtils.h",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Library/support/RingBufferUtils.h",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Demos/Demo2_COM.MXCHIP.SPP/HaProtocol.h",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Platform/PlatformUart.h",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Platform/system_stm32f2xx.c",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/MICO/mico_system_monitor",
		"/Users/william/Develop/mxchipWNet Pro Demo@EMW316x/Platform/PlatformWDG.h",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Platform/PlatformLogging.h",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Platform/PlatformFlash.c",
		"/Users/william/Develop/mxchipWNet Pro Demo@EMW316x/Platform/PlatformUart.h",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Demos/Demo4_mxchipWNet_HA/mico_app_main.c",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Demos/Demo4_mxchipWNet_HA/HaProtocol.h",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Demos/Demo4_mxchipWNet_HA/User_EasyLink.c",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Demos/Demo4_mxchipWNet_HA/mico_app_define.h",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Demos/Demo4_mxchipWNet_HA/HaProtocol.c",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Demos/Demo4_mxchipWNet_HA/UartRecv.c",
		"/Users/william/Develop/mxchipWNet Pro Demo@EMW316x/Library/mxchipWNet.h",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Demos/Demo4_mxchipWNet_HA/RemoteTcpClient.c",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Demos/Demo4_mxchipWNet_HA/LocalTcpServer.c",
		"/Users/william/Develop/mxchipWNet Pro Demo@EMW316x/Library/Support/Common.h",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Demos/Demo4_mxchipWNet_HA/remoteTcpClient.c",
		"/Users/william/Develop/mxchipWNet Pro Demo@EMW316x/Demos/Demo4_mxchipWNet_HA/mico_app_define.h",
		"/Users/william/Develop/mxchipWNet Pro Demo@EMW316x/STM32F2xx_StdPeriph_Driver/inc/stm32f2xx_dma.h",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Demos/Demo4_mxchipWNet_HA/haProtocol.h",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Demos/Demo4_mxchipWNet_HA/haProtocol.c",
		"/Users/william/Develop/Clang_lib/ARMCC/include/string.h",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Demos/Demo4_mxchipWNet_HA/localTcpServer.c",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Demos/Demo4_mxchipWNet_HA/user_EasyLink.c",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Demos/Demo4_mxchipWNet_HA/haCommand.c",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Demos/Demo4_mxchipWNet_HA/haCommand.h",
		"/Users/william/Develop/mxchipWNet Pro Demo@EMW316x/STM32F2xx_StdPeriph_Driver/inc/stm32f2xx_flash.h",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Platform/HAL_EABox.h",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Platform/hal_misc.c",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Demos/Demo4_mxchipWNet_HA/philipsled/mico_app_main.c",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Demos/Demo4_mxchipWNet_HA/philipsled/mico_app_define.h",
		"/Users/william/Develop/mxchipWNet Pro Demo@EMW316x/Library/mico_rtos.h",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Projects/Demo4_mxchipWNet_HA/sublime/mxchipWNet_HA.sublime-project",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Demos/Demo4_mxchipWNet_HA/mico_app_main",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Demos/Demo4_mxchipWNet_HA/Bonjour.c",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Demos/Demo4_mxchipWNet_HA/mxchipWNet-HA.h",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Demos/Demo4_mxchipWNet_HA/mxchipWNet-HA.c",
		"/Users/william/Develop/mxchipWNet Pro Demo@EMW316x/STM32F2xx_StdPeriph_Driver/inc/stm32f2xx_pwr.h",
		"/Users/william/Develop/mxchipWNet Pro Demo@EMW316x/HAL/platform.h",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Demos/Demo4_mxchipWNet_HA/EasyLink.h",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/HAL/platform.c",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Demos/Demo4_mxchipWNet_HA/EasyLink.c",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/STM32F2xx_StdPeriph_Driver/src/stm32f2xx_pwr.c",
		"/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/HAL/hal_misc.c"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
			"<open folders>",
			"",
			"<open folders>",
			"/Users/william/Develop/E-DICE",
			"",
			"<open folders>",
			"/Volumes/C/develop/MDV-STM32-407/EMB_STM32_407_wifi_lib_V2.0.0/",
			"/Volumes/C/develop/MDV-STM32-407/EMB_STM32_407_wifi_lib_V2.0.0/Project/复件 Data_Send&Recv",
			"/Volumes/C/develop/MDV-STM32-407/EMB_STM32_407_wifi_lib_V2.0.0/Project/STM32F4xx_StdPeriph_Examples"
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"applyNewConfiguration",
			"_WACServerEngine",
			"_HandleState_HandleConfiguredMessage",
			"eState_Complete",
			"_WACServerEngine",
			"eState_Complete",
			"EasyLinkNotify_DHCPCompleteHandler",
			"_mfi_bonjour_init",
			"apply",
			"EasyLinkNotify_WiFIParaChangedHandler",
			"applyNewConfiguration",
			"apply",
			"applyNewConfiguration",
			"apply",
			"easylink_thread",
			"http_server_thread",
			"applyNewConfiguration",
			"_mfi_bonjour_init",
			"_interface",
			"LED_EL_TRIGGER_INTERVAL",
			"_Led_EL_timer",
			"_led_EL_Timeout_handler",
			"wiced_result_t",
			"service_name",
			"BONJOUR_SERVICE",
			"firmwareRevision",
			"wac_parameters",
			"_to_json_string",
			"json_object_to_json_string",
			"free",
			"_FTCRespondInComingMessage",
			"_connectFTCServer",
			"EasyLinkCreateReportJsonHTTPMessage",
			"socklen_t",
			"backlog",
			"net_para_st",
			"*             ",
			"TIMEVAL_st",
			"mico_rtos_is_current_thread",
			"CMSIS MISRA-C:2004 Compliance Exceptions	",
			"ADC driver modules",
			"Initialization and Configuration functions",
			"MSG_DONTWAIT",
			"Swap32",
			"mxEnable",
			"wLanUnConfigured",
			"timeout_ms",
			"DEFAULT_SYSTEM_MONITOR_PERIOD",
			"_report_status_sem",
			");\n",
			"exit",
			"_get_status",
			"platform_uart_receive_bytes",
			"remote",
			"_mutex",
			"check_sum",
			"check_sm",
			"check_sum",
			"hal_uart_get_one_packet",
			"Continue",
			"update",
			"flashContentInRam_mutex",
			"set_network_state",
			"tx_complete",
			"uart_wakeup_thread",
			"Rx_irq_handler",
			"RX_BUFFER_SIZE",
			"ring_buffer_used_space",
			"platform_uart_receive_bytes",
			"_wifiConnected_mutex",
			"easylink_thread",
			"mico_notify_EASYLINK_COMPLETE_function",
			"mico_notify_EASYLINK_COMPLETED",
			"EasyLinkNotify_EasyLinkCompleteHandler",
			"easylink_thread",
			"easylink_sem",
			"md5",
			"mutex",
			"REMOTE_CONNECT",
			"_check_sum",
			"set_network_state",
			"minFd",
			"Platform_Debug_UART_Init\n",
			"Platform_Debug_UART_Init\nPlatform_Debug_UART_Init",
			"Platform_Debug_UART_Init",
			"HTTPGetHeaderField",
			"HTTPGetHeaderField∫\nHTTPGetHeaderField∫",
			"HTTPGetHeaderField",
			"_PlatformFlashGetWriteProtectionStatus",
			"FLASH_COMPLETE",
			"wdgOutCallback",
			"GetSector",
			"report_timer_handler",
			"_report_timer",
			"ha",
			"stopEasyLink",
			"mfi_bonjour_remove_record",
			"_button_EL_timer",
			"PWR_ClearFlag",
			"easylinkServerIP",
			"mfi_bonjour_remove_record",
			"suspend_bonjour_service",
			"easylinkClient_fd",
			"stopEasyLink",
			"easylinkClient_fd",
			"stopEasyLink",
			"easyLink_fd",
			"reboot",
			"mfi_bonjour_remove_record",
			"fd_client",
			"threadexit",
			"easylink_sem",
			"HANotify_DHCPCompleteHandler",
			"mico_notify_DHCP_COMPLETED",
			"connectFTCServer",
			"_connectFTCServer",
			"connectFTCServer",
			"startLocalControllerService",
			"HTTPGetHeaderField",
			"&value, &valueSize",
			"extraDataPtr",
			"HTTPHeaderParse",
			"_FTCRespondInComingMessage",
			"easylinkServerIP",
			"easylink_log(\"Get SSID: %s, Key: ",
			"icoSystemConfig.configured !=",
			"wlan",
			"wlanc"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 11,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/MICO/mico_main.c",
					"settings":
					{
						"buffer_size": 11211,
						"regions":
						{
						},
						"selection":
						[
							[
								1366,
								1366
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 4202.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "/Users/william/Develop/mxchipWNet Pro Demo@EMW316x/Library/mico_wlan.h",
					"settings":
					{
						"buffer_size": 9281,
						"regions":
						{
						},
						"selection":
						[
							[
								1367,
								1367
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/MICO/mico_define.h",
					"settings":
					{
						"buffer_size": 8088,
						"regions":
						{
						},
						"selection":
						[
							[
								3888,
								3898
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1149.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/MICO/mico_configuration_server.c",
					"settings":
					{
						"buffer_size": 7202,
						"regions":
						{
						},
						"selection":
						[
							[
								348,
								348
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Library/EasyLink.c",
					"settings":
					{
						"buffer_size": 25238,
						"regions":
						{
						},
						"selection":
						[
							[
								21208,
								21226
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2297.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Library/EasyLink.h",
					"settings":
					{
						"buffer_size": 2189,
						"regions":
						{
						},
						"selection":
						[
							[
								1219,
								1183
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/MICO/mico_flash_configuration.c",
					"settings":
					{
						"buffer_size": 4775,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 201.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Demos/COM.MXCHIP.SPP/mico_app_define.h",
					"settings":
					{
						"buffer_size": 2867,
						"regions":
						{
						},
						"selection":
						[
							[
								943,
								943
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/Library/support/mdns.c",
					"settings":
					{
						"buffer_size": 21286,
						"regions":
						{
						},
						"selection":
						[
							[
								15183,
								15193
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/MICO/mico_wac.c",
					"settings":
					{
						"buffer_size": 21342,
						"regions":
						{
						},
						"selection":
						[
							[
								14250,
								14250
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 5500.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "/Users/william/Develop/mxchipWNet Pro Demo@EMW316x/Library/mico_callback.h",
					"settings":
					{
						"buffer_size": 1828,
						"regions":
						{
						},
						"selection":
						[
							[
								80,
								80
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "/Users/william/Develop/mxchipWNet Pro Demo@EMW316x/Library/Support/mdns.h",
					"settings":
					{
						"buffer_size": 3975,
						"regions":
						{
						},
						"selection":
						[
							[
								3800,
								3820
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "/Users/William/Develop/mxchipWNet Pro Demo@EMW316x/MICO/MFi-SAP.h",
					"settings":
					{
						"buffer_size": 204,
						"regions":
						{
						},
						"selection":
						[
							[
								178,
								193
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 34.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.clang":
	{
		"height": 142.0
	},
	"output.exec":
	{
		"height": 100.0
	},
	"output.git":
	{
		"height": 100.0
	},
	"replace":
	{
		"height": 64.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"",
				"STM32F2xx_StdPeriph_Driver/src/stm32f2xx_i2c.c"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 229.0,
	"status_bar_visible": true
}
